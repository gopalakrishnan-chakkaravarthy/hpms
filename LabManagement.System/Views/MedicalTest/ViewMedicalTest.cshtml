@using Lab.Management.Entities;
@using LabManagement.System.Common;
@model lmsMedicalTest
@{
    ViewBag.Title = "View MedicalTest";
    Layout = "~/Views/Shared/_Layout.cshtml";
    var transactionType = ViewBag.TransactionType as string;
    var message = transactionType.GetTransactionMessage();
    var taxDdl = ViewBag.TaxDdl as IEnumerable<SelectListItem>;
}


@if (!string.IsNullOrEmpty(message))
{
    <div class="row">
        <div class="col-sm-8 col-md-8 col-lg-8">
            <div class="alert alert-info">
                @message
            </div>
        </div>
    </div>
}


@using (Html.BeginForm("EditMedicalTest", "MedicalTest", new { @id = "IdEdit", @name = "EditForm" }))
{
    <h4 class="text-success">
        <i class="glyphicon glyphicon-hand-right"> </i>
        @if (Model.TESTID > 0)
        {
            <span> @Model.TESTNAME</span>
        }
        else
        {
            <span>Medical Test</span>
        }
    </h4>
    <div class="roundCornerDiv">
        <div class="row ">
            <div class="col-sm-5 col-md-5 col-lg-5 ">
                <fieldset class="lms-fs-border">
                    <legend class="lms-fs-border">Test Details</legend>
                    <div class="control-group">
                        <label for="TESTNAME"> Test Name</label>
                        @Html.TextBoxFor(m => m.TESTNAME, new { @class = "form-control", required = "required" })<br><br>
                        @Html.HiddenFor(x => x.TESTID)
                        <label for="SELLIGPRICE"> Test Price</label>
                        @Html.TextBoxFor(m => m.SELLIGPRICE, new { @class = "form-control", required = "required" })
                        <label for="NORMALVALUE"> Normal Value</label>
                        @Html.TextBoxFor(m => m.NORMALVALUE, new { @class = "form-control", required = "required" })
                        <label for="TestForForDdl">  Test For</label>
                        @if (Model.TestForForDdl != null)
                        {
                            @Html.DropDownListFor(x => x.SelectedTestFor, Model.TestForForDdl, new { @class = "form-control selectpicker", @required = "required" })
                        }
                        <label for="GroupForDdl">  Group By</label>
                        @if (Model.GroupForDdl != null)
                        {
                            @Html.DropDownListFor(x => x.SelectedGroup, Model.GroupForDdl, new { @class = "form-control selectpicker", @required = "required" })
                        }


                    </div>
                </fieldset>
            </div>
            @if (Model.TESTID > 0)
            {
                <div class="row">
                    <div class="col-sm-5 col-md-5 col-lg-5">
                        <fieldset class="lms-fs-border">
                            <legend class="lms-fs-border">Tax Details</legend>
                            <div class="row">
                                <div class="col-sm-11 col-md-11 col-lg-11">
                                    <div class="input-group ">
                                        <select class="selectpicker" data-live-search="true" id="taxDdl">
                                            @foreach (var dropdown in taxDdl)
                                            {
                                                <option data-tokens="@dropdown.Text" value="@dropdown.Value">@dropdown.Text</option>
                                            }
                                        </select>
                                        <div class="input-group-btn">
                                            <button type="button" class="btn btn-secondary" id="btnAddTax">
                                                <i class="glyphicon glyphicon-plus"> </i>
                                            </button>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-sm-10 col-md-10 col-lg-10">
                                    <div id="labTaxGrid"></div>
                                </div>
                            </div>
                        </fieldset>
                    </div>
                </div>
            }

        </div>
        <div class="row">
            <div class="col-sm-12 col-md-12 col-lg-12 pull-right">
                <a href="@Url.Action("ViewAllMedicalTest", "MedicalTest")" class="btn btn-warning">
                    <i class="glyphicon glyphicon-arrow-left">
                        Back
                    </i>
                </a>
                <button type="submit" class="btn btn-primary">
                    <i class="glyphicon glyphicon-pencil">
                        Save
                    </i>
                </button>
                @if (Model.TESTID > 0)
                {
                    <a href="@Url.Action("DeleteMedicalTest", "MedicalTest", new { MedicalTestId=Model.TESTID})" class="btn btn-danger">
                        <i class="glyphicon glyphicon-trash"></i>
                        Delete
                    </a>
                }
            </div>
        </div>
    </div>


}

@section Scripts {
    <script type="text/javascript">
        $(document).ready(function () {

            $("#btnAddTax").on('click', (function () {
                var testId = '@Model.TESTID';
                var taxId = $('#taxDdl option:selected').val();
                 $("#btnAddTax").attr("disabled", true);
                validateTaxExists(testId,taxId);
            }));
            function validateTaxExists(testId, taxId) {
                 $.ajax({
                    url: '@Url.Action("IsExists", "LabTax")',
                    type: "GET",
                    data: { "testId": testId, "taxId": taxId },
                     success: function (result) {
                         $("#btnAddTax").removeAttr("disabled");
                         if (result === false) {
                             saveTaxDetails(testId, taxId);
                         }
                         else {
                               alert("Already tax mapped to the item,please choose some other.");
                         }


                    },
                    error: function () {
                         $("#btnAddTax").removeAttr("disabled");
                        alert("Unable to add tax");
                    }
                });
            }
            function saveTaxDetails(testId, taxId) {
                var postData = { "TestId":testId,"TaxId":taxId};
                    $.ajax({
                    type: "POST",
                    url: "@Url.Action("Edit","LabTax")",
                    contentType: 'application/json; charset=utf-8',
                    data: JSON.stringify(postData),
                    success: function (data) {
                        $('#labTaxGrid').html(data);
                    },
                    failure: function (errMsg) {
                        alert('failure' + errMsg);
                    }
                });
            }

            function hasGridDataExists() {
                var testId = '@Model.TESTID';
                if (testId == 0 || testId == '0') {
                    return;
                }
                 $.ajax({
                    url: '@Url.Action("HasDataExists", "LabTax")',
                    type: "GET",
                    data: { "testId": testId },
                     success: function (result) {
                          if (result === true) {
                             loadTaxGridDataOnInit(testId);
                         }
                    },
                    error: function () {

                        alert("Unable to load tax details");
                    }
                });
            }
            function loadTaxGridDataOnInit(testId) {
                 $.ajax({
                    url: '@Url.Action("Index", "LabTax")',
                    type: "GET",
                    data: { "testId": testId },
                     success: function (data) {
                           $('#labTaxGrid').html(data);
                    },
                    error: function () {

                        alert("Unable to load tax details");
                    }
                });
            }
            hasGridDataExists();
        });</script>
}


