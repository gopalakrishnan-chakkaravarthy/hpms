@using Lab.Management.Entities;
@model lmsPatientReportStore
@{
    ViewBag.Title = "ViewPatientReportStore";
    Layout = "~/Views/Shared/_Layout.cshtml";
    var message = ViewBag.Message as string;
    var TemlpateContent = ViewBag.TemlpateContent as string;
}

@if (!string.IsNullOrEmpty(message))
{
    <div class="row">
        <div class="col-sm-8 col-md-8 col-lg-8">
            <div class="alert alert-info">
                @message
            </div>
        </div>
    </div>
}
<div class="col-sm-12 col-md-12 col-lg-12">
    <div class="row">
        <h4 class="text-success"><i class="glyphicon glyphicon-hand-right"> </i>  Patient Report Editor</h4>
        <hr />
    </div>
    <div class="row">
        <div class="col-sm-2 col-md-2 col-lg-2">
            Select Patient
        </div>
        <div class="col-sm-2 col-md-2 col-lg-2">

            <select id="Idpatientddl" name="Idpatientddl" class="form-control selectpicker">
            </select>
        </div>
        <div class="col-sm-2 col-md-2 col-lg-2">
            Select Template
        </div>
        <div class="col-sm-2 col-md-2 col-lg-2">
            <select id="IdTemplateDdl" name="IdTemplateDdl" class="form-control selectpicker">
            </select>
            @*@Html.DropDownListFor(x => x.SelectedTemplate, Model.TemplateDdl, new { @id = "IdTemplateDdl", @class = "form-control selectpicker", required = "required" })*@
            @Html.HiddenFor(x => x.REPORTID)
            @Html.Hidden("hdnEditorContent", @TemlpateContent)
        </div>
    </div>

    <div class="row">
        <div class="col-sm-2 col-md-2 col-lg-2">
            Patient Name
        </div>
        <div class="col-sm-2 col-md-2 col-lg-2">
            @Html.TextBoxFor(m => m.PATIENTNAME, new { @class = "form-control", @Id = "patientName", required = "required" })
        </div>
        <div class="col-sm-2 col-md-2 col-lg-2">
            Contact
        </div>
        <div class="col-sm-2 col-md-2 col-lg-2">
            @Html.TextBoxFor(m => m.CONTACT, new { @class = "form-control", @Id = "contact", required = "required" })
        </div>
        <div class="col-sm-4 col-md-4 col-lg-4">
            <a href="@Url.Action("ViewAllPatientReportStore", "Invoice")" class="btn btn-warning">
                <i class="glyphicon glyphicon-arrow-left">
                    Back
                </i>
            </a>
            <button type="button" class="btn btn-primary" id="btnSave">
                <i class="glyphicon glyphicon-floppy-disk"></i>
                Save
            </button>
            @if (Model.REPORTID > 0)
            {
                <a href="@Url.Action("DeleteTemplate", "Invoice", new { reportId = @Model.REPORTID })" class="btn btn-danger">
                    <i class="glyphicon glyphicon-trash">
                        Delete
                    </i>
                </a>
            }
        </div>
    </div>
    <hr />
    <div class="row">
        <div class="col-sm-12 col-md-12 col-lg-12">
            @Html.TextArea("templateDetails", new { @height = "400px", @class = "ckeditor", @Id = "templateDetails", required = "required" })
        </div>
    </div>
    <!-- The overlay -->
    <div id="myNav" class="overlay">

        <!-- Overlay content -->
        <div class="overlay-content">
            <a href="#">Loading Report...Please wait</a>
        </div>

    </div>
</div>
<style type="text/css">
    /* The Overlay (background) */
    .overlay {
        /* Height & width depends on how you want to reveal the overlay (see JS below) */
        height: 100%;
        width: 0;
        position: fixed; /* Stay in place */
        z-index: 1; /* Sit on top */
        left: 0;
        top: 0;
        background-color: rgb(0,0,0); /* Black fallback color */
        background-color: rgba(0,0,0, 0.9); /* Black w/opacity */
        overflow-x: hidden; /* Disable horizontal scroll */
        transition: 0.5s; /* 0.5 second transition effect to slide in or slide down the overlay (height or width, depending on reveal) */
    }

    /* Position the content inside the overlay */
    .overlay-content {
        position: relative;
        top: 25%; /* 25% from the top */
        width: 100%; /* 100% width */
        text-align: center; /* Centered text/links */
        margin-top: 30px; /* 30px top margin to avoid conflict with the close button on smaller screens */
    }

    /* The navigation links inside the overlay */
    .overlay a {
        padding: 8px;
        text-decoration: none;
        font-size: 10rem;
        color: #818181;
        display: block; /* Display block instead of inline */
        transition: 0.3s; /* Transition effects on hover (color) */
    }

        /* When you mouse over the navigation links, change their color */
        .overlay a:hover, .overlay a:focus {
            color: #f1f1f1;
        }

    /* Position the close button (top right corner) */
    .overlay .closebtn {
        position: absolute;
        top: 20px;
        right: 45px;
        font-size: 14px;
    }
</style>
@section Scripts {
    <script type="text/javascript" src="~/Content/js/ckeditor/ckeditor.js"></script>
    <script type="text/javascript">
        $(document).ready(function () {
            openNav();
            GetTemplateListOnLoad();
            var selectedTemplateId = '@Model.SelectedTemplate';
            var SelectedPatient ='@Model.SelectedPatient';
            $('#Idpatientddl').on('change', function () {
                var patientName = $('#Idpatientddl option:selected').text();
                SelectedPatient = $('#Idpatientddl option:selected').val();
                $('#patientName').val(patientName);

            });
            $('#IdTemplateDdl').on('change', function () {
                openNav();
                var templateId = $('#IdTemplateDdl option:selected').val();
                setTemplateHtml(templateId);
            });

            function SetEditorOnEdit(fromAjax,templateContent) {
                try {
                    var templateEditContent = '';
                    if (fromAjax) {
                        templateEditContent = templateContent;
                    }
                    else {
                        templateEditContent = $('#hdnEditorContent').val();;
                    }

                    var htmliFrame = $('iframe')[0];
                    if (htmliFrame === undefined)
                        return;
                    var closestElement = ($(htmliFrame)[0]);
                    if (closestElement === undefined)
                        return;
                    var iframeFormElement = $(closestElement)[0];
                    if (iframeFormElement === undefined)
                        return;
                    iframeFormElement.contentDocument.body.innerHTML = templateEditContent;
                } catch () {

                }
            }
            $('#btnSave').on('click', function () {
                SaveTemplate();
            });
            var emptyString = "";
            function GetEditorContent() {

                var htmliFrame = $('iframe')[0];
                if (htmliFrame === undefined)
                    return emptyString;
                var closestElement = ($(htmliFrame)[0]);
                if (closestElement === undefined)
                    return emptyString;
                var iframeFormElement = $(closestElement)[0];
                if (iframeFormElement === undefined)
                    return emptyString;
                return iframeFormElement.contentDocument.body.innerHTML;
            }
            function setTemplateHtml(templateId) {
                var getTemplate = "@Url.Action("GetTemplateHtml", "Admin")" + '?templateId=' + templateId ;
                $.ajax({
                    url: getTemplate,
                    type: "GET",
                    success: function (result) {
                        setTimeout(SetEditorOnEdit(true, result), 1000);
                        setTimeout(closeNav(), 1000);
                    },
                    error: function (errorResult) {
                        alert("Error in loading template content");
                    }
                });
            }

            function GetTemplateListOnLoad() {
                var apiUrl = "@Url.Action("GetTemplateList", "Admin")";
                $.ajax({
                    url: apiUrl,
                    type: "GET",
                    success: function (ddlData) {
                        var dropdown = $('#IdTemplateDdl');
                        dropdown.empty();
                        if (ddlData !== 'undefined' && ddlData !== null) {
                            $.each(ddlData, function (key, entry) {
                               dropdown.append($('<option></option>').attr('value', entry.Value).text(entry.Text));
                            });
                        }
                        dropdown.selectpicker('refresh');
                        dropdown.selectpicker('val', selectedTemplateId);
                        GetPatientListOnLoad();
                    },
                    error: function (errorResult) {
                        alert("Error in loading patient list");
                    }
                });
            }
            function GetPatientListOnLoad() {
                var apiUrl = "@Url.Action("GetPatientList", "Patient")";
                $.ajax({
                    url: apiUrl,
                    type: "GET",
                    success: function (ddlData) {
                        var dropdown = $('#Idpatientddl');
                        dropdown.empty();
                        if (ddlData !== 'undefined' && ddlData !== null) {
                            $.each(ddlData, function (key, entry) {
                               dropdown.append($('<option></option>').attr('value', entry.Value).text(entry.Text));
                            });
                        }
                        dropdown.selectpicker('refresh');
                        dropdown.selectpicker('val', selectedTemplateId);
                        setTimeout(SetEditorOnEdit(false), 1000);
                        setTimeout(closeNav(), 1000);
                    },
                    error: function (errorResult) {
                        alert("Error in loading patient list");
                    }
                });
            }
            function SaveTemplate() {
                var templateDetails = GetEditorContent();

                if (templateDetails === '' || templateDetails === undefined
                    || templateDetails === null) {
                    alert("Unable to Save Template ,Error while Processing");
                    return;
                }
                var patientName = $('#patientName').val();;
                if (patientName === '' || patientName === undefined) {
                    alert("Please select/enter patient name");
                    return;
                }
                var contact = $('#contact').val();;
                if (contact === '' || patientName === undefined) {
                    alert("Please enter contact");
                    return;
                }
                var postData = {
                    REPORTID: $('#REPORTID').val(),
                    SelectedPatient: SelectedPatient,
                    CONTACT: contact,
                    PATIENTNAME: patientName,
                    REPORTDETAIL: templateDetails
                };
                $.ajax({
                    type: "POST",
                    url: "@Url.Action("SavePatientReportStore")",
                    contentType: 'application/json; charset=utf-8',
                    data: JSON.stringify(postData),
                    success: function (data) {
                        window.location.href = "ViewPatientReportStore?reportId=" + data.reportId + '&viewMessage=' + data.viewMessage;
                    },
                    failure: function (errMsg) {
                        alert('failure' + errMsg);
                    }
                });
            }
            /* Open when someone clicks on the span element */
            function openNav() {
                document.getElementById("myNav").style.width = "100%";
            }

            /* Close when someone clicks on the "x" symbol inside the overlay */
            function closeNav() {
                document.getElementById("myNav").style.width = "0%";
            }
        });
    </script>
}
